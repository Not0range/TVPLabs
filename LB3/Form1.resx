<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADi
        CQAAAk1TRnQBSQFMAgEBAwEAARgBAAEYAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGR4AA0MBegNGAcIDAAH/A0oBmQMAAf8DSwGuLAAD8gH/A80B/wNaAf8DMQH/
        AywB/wMsAf8DLAH/AywB/wMsAf8DLAH/AywB/wMsAf8DLAH/AywB/wMsAf8DLAH/AzAB/wNWAf8DzgH/
        A/NR/1QAAxYBHwNJAYsDLwHmA0MBegQAAwUBBwMGAQgDPwHTLAAD5gH/AyIB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DCwH/A85R/1QA
        A0oBmAMjATMDIwEzDAADBgEIAz8B0wNCAcwoAANgAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DVlH/VAADNwFbA0IBzAQA
        AzoBYQNKAZgDPQHWCAADPAFmAwAB/yQAAwgB/wMAAf8DAAH/AxIB/wMpAf8DKQH/AykB/wMpAf8DKQH/
        AykB/wMpAf8DKQH/Ax4B/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMwUf9UAANKAZgDQgHMBAADQwF5
        BAADSgGYA00BswcAAf8rAAH/AwAB/wMCAf8DxAH/A/IB/wPzAf8D8wH/A/MB/wPzAf8D8wH/A/IB/wPy
        Af8D3AH/AxgB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AyxR/1cAAf8IAAMdASkDDQH6A0wBoAgAA0MBzysA
        Af8DAAH/AwQB/wPJAf8DxwH/A1sB/wNbAf8DWwH/A1sB/wNbAf8DWwH/A6cB/wPgAf8DGwH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DLFH/VAADQwF5Az0B1gM4AV0MAAMHAQoDIwE0A0cBhQsAAQEDHQEqAwIBAxcA
        Af8DAAH/AwQB/wPJAf8DrAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/A3UB/wPgAf8DGwH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DLFH/WAADIwEzAzcBXAMzAVIDLQFGBAADPQHWAzcBXAMjATMIAANDAc0DEgH2
        A0IBzxcAAf8DAAH/AwQB/wPJAf8DrAH/AwAB/wMAAf8DKwH/A0kB/wNJAf8DSQH/A54B/wPmAf8DXQH/
        A0kB/wNJAf8DHwH/AwAB/wMAAf8DLFH/WAADFgEeA0sBtgM9AdYDSgGYA0oBpAMnAeoDFgEfAzwBZwM8
        AWcDPAFnA0IBzAQAAzwBZgM8AWcDPAFnAzwBZwMQARUHAAH/AwAB/wMEAf8DyQH/A6wB/wMAAf8DBgH/
        A+4B/wPyAf8D8gH/A/MB/wPzAf8D8wH/A/MB/wPzAf8D8gH/A7sB/wMAAf8DAAH/AyxR/3QAA0oBmQQA
        AzwBZxAAAzwBZwMjATMDIwE0BwAB/wMAAf8DBAH/A8kB/wPxAf8D6wH/A+wB/wPyAf8DcgH/AwMB/wMD
        Af8DAwH/AwMB/wMDAf8DAwH/A7oB/wPCAf8DAAH/AwAB/wMsUf90AAM9AdYcAANLAa4DIwE0BwAB/wMA
        Af8DBAH/A8gB/wPyAf8D8wH/A/MB/wPzAf8DbgH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/A7gB/wPD
        Af8DAAH/AwAB/wMsUf9sAAMHAQoDIwE0A0oBmQgAAyQBNQM7AdgDJgE5CAADIwEzAzgBXQMWAR8DAAH/
        AwAB/wMDAf8DugH/A+wB/wPtAf8D7QH/A/MB/wNuAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DuAH/
        A8MB/wMAAf8DAAH/AyxR/2wAAyMBMwM3AVwDFgEeCAADPQHWAyMBMwNHAYQIAAMHAQoDIwEzA0oBmQMA
        Af8DAAH/AwAB/wMXAf8DJwH/AycB/wMyAf8D8wH/A24B/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wO4
        Af8DwwH/AwAB/wMAAf8DLFH/bAADSwGdAzgBXQgAAyQBNQNCAcwEAAM8AWYDNAFVCAADGgElA0QBzgMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMKAf8D8wH/A+wB/wPmAf8D5QH/A+UB/wPlAf8D5QH/A+UB/wPw
        Af8DwwH/AwAB/wMAAf8DLFH/bAADBwEJAz0B1QNKAZkLAAH/AwAB/wMAAf8IAAMjATMDAAH/AxEBFwMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMKAf8D8wH/A/MB/wPzAf8D8gH/A/IB/wPyAf8D8gH/A/IB/wPz
        Af8DwwH/AwAB/wMAAf8DLFH/dAADPQHXHAADSwGuAyMBNAcAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMD
        Af8DzgH/A+oB/wPqAf8D6gH/A+oB/wPqAf8D6gH/A+oB/wPqAf8DoAH/AwAB/wMAAf8DLFH/dAADSgGZ
        BAADFQEdDAADCAELAxABFQMjATMDIwE0BAADCQH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AzFR/3QAAycB6wNCAcwDKAHo
        A0sBowQAAzMBUgM9AdcDMwHhAz0B1gMjATQEAANsAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DWlH/gAADTAGvAz0BawNK
        AZEUAAPsAf8DLwH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMiAf8DzlH/hAADEgEZGAAD8wH/A+wB/wNsAf8DCQH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwgB/wNgAf8D5wH/A/JR/1AAAUIBTQE+
        BwABPgMAASgDAAFQAwABFAMAAQEBAAEBBQAB8BcAA/8BAAHgAX8B8AkAAYQBfwHwCQABjgE/AfAJAAGR
        AZ8B8AkAAZQBvwHwCQABsQG/AfAJAAGOATEB8AkAAcIBMQHwCQABwAEEARAJAAH/Aa8BEAkAAf8BvwGQ
        CQAB/gExAYAJAAH+ATEBgAkAAf4BZAHACQAB/gExAYAJAAH/Ab8BkAkAAf8BrgEQCQAB/wGEARAJAAH/
        AfEB8AkAAf8B+wHwCQAL
</value>
  </data>
</root>